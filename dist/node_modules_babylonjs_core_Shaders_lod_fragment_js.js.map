{"version":3,"file":"node_modules_babylonjs_core_Shaders_lod_fragment_js.js","mappings":";;;;;;;;;;;;;;AAAA;AACwD;AACxD;AACA;AACA,sBAAsB,2CAA2C,iBAAiB,iCAAiC,kBAAkB,qBAAqB,kBAAkB;AAC5K,CAAC,qDAAqD,eAAe;AACrE;AACA;AACA,KAAK,gEAAW;AAChB,IAAI,gEAAW;AACf;AACA;AACO,yBAAyB;AAChC,wC","sources":["webpack://web-tide/./node_modules/@babylonjs/core/Shaders/lod.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nconst name = \"lodPixelShader\";\nconst shader = `#extension GL_EXT_shader_texture_lod : enable\nprecision highp float;const float GammaEncodePowerApprox=1.0/2.2;varying vec2 vUV;uniform sampler2D textureSampler;uniform float lod;uniform vec2 texSize;uniform int gamma;void main(void)\n{gl_FragColor=texture2DLodEXT(textureSampler,vUV,lod);if (gamma==0) {gl_FragColor.rgb=pow(gl_FragColor.rgb,vec3(GammaEncodePowerApprox));}}\n`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const lodPixelShader = { name, shader };\n//# sourceMappingURL=lod.fragment.js.map"],"names":[],"sourceRoot":""}