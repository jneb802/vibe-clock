{"version":3,"file":"node_modules_babylonjs_core_ShadersWGSL_rgbdDecode_fragment_js.js","mappings":";;;;;;;;;;;;;;;AAAA;AACwD;AACX;AAC7C;AACA,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA,iDAAiD,0GAA0G;AAC3J;AACA,KAAK,gEAAW;AAChB,IAAI,gEAAW;AACf;AACA;AACO,oCAAoC;AAC3C,+C","sources":["webpack://web-tide/./node_modules/@babylonjs/core/ShadersWGSL/rgbdDecode.fragment.js"],"sourcesContent":["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore.js\";\nimport \"./ShadersInclude/helperFunctions.js\";\nconst name = \"rgbdDecodePixelShader\";\nconst shader = `varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;\n#include<helperFunctions>\n#define CUSTOM_FRAGMENT_DEFINITIONS\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=vec4f(fromRGBD(textureSample(textureSampler,textureSamplerSampler,input.vUV)),1.0);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const rgbdDecodePixelShaderWGSL = { name, shader };\n//# sourceMappingURL=rgbdDecode.fragment.js.map"],"names":[],"sourceRoot":""}